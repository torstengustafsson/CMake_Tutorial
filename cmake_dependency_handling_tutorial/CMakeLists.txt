# tutorial project with a library, an implementation that uses the 
# library, a base for testing project(s) and tools.
# a base for a  config file is used for the library (my_library) which
# can be used to specify project options as cmake flags.

# adds my_library (a library) to example (an implementation with an executable)


cmake_minimum_required(VERSION 3.0)
project(MY_LIBRARY)

# define library version (update: apparently you can also do it in project()!)
set(MY_LIBRARY_VERSION_MAJOR 1 CACHE STRING "major version" FORCE)
set(MY_LIBRARY_VERSION_MINOR 0 CACHE STRING "minor version" FORCE)
set(MY_LIBRARY_VERSION ${MY_LIBRARY_VERSION_MAJOR}.${MY_LIBRARY_VERSION_MINOR} CACHE STRING "version" FORCE)

set(bin_dest "bin")
set(include_dest "inc/my_library-${MY_LIBRARY_VERSION}")
set(main_lib_dest "lib/my_library-${MY_LIBRARY_VERSION}")

#use build type as identifier for lib destination
set(lib_dest ${main_lib_dest}/${CMAKE_BUILD_TYPE})


# some options
option(MY_LIBRARY_USE_FANCY_NEW_CLASS "whether or not to use fancy new class" ON)
option(MY_LIBRARY_DEBUG_MODE "whether or not debug mode is activated" OFF)

# add subdiretories
add_subdirectory(my_library)
add_subdirectory(example)
add_subdirectory(tool)
add_subdirectory(test)

# install the .cmake file generated by my_library
#install(FILES my_library-config.cmake DESTINATION ${main_lib_dest})

# install export group to be able to export the project to other CMake projects
#install(EXPORT my_library DESTINATION "${lib_dest}")